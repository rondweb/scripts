#!/bin/bash
MYIP=$(hostname -I | awk '{print $1}')
DOMAIN="modemcable015.156-81-70.mc.videotron.ca"

# Update and install required packages
sudo add-apt-repository ppa:ondrej/php -y
sudo apt update && sudo apt upgrade -y
sudo apt install -y ca-certificates apt-transport-https software-properties-common wget tar

# Add PHP repository and install PHP packages
sudo wget -qO /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/php.list
sudo apt update
sudo apt install -y php8.3-common php8.3-cli php8.3-zip php8.3-xml php8.3-mbstring php8.3-gd php8.3-curl php8.3-imagick php8.3-gmp php8.3-bcmath php8.3-imagick apache2 libapache2-mod-php8.3 mariadb-server php8.3-mysql

# Secure MySQL installation
#sudo mysql_secure_installation -h 70.81.156.15 -p123456

sudo mysql -u root -p123456 -h 70.81.156.15 <<EOF
CREATE DATABASE nextcloud;
CREATE USER 'nextclouduser'@'%' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON nextcloud.* TO 'nextclouduser'@'%';
FLUSH PRIVILEGES;
EOF

# Create MySQL database and user
#sudo mysql -u root -p123456 -h 70.81.156.15 <<EOF
#CREATE DATABASE nextcloud;
#CREATE USER 'nextclouduser'@'localhost' IDENTIFIED BY 'password';
#GRANT ALL PRIVILEGES ON nextcloud.* TO 'nextclouduser'@'localhost';
#FLUSH PRIVILEGES;
#EXIT;
#EOF

# Download and extract Nextcloud
wget https://download.nextcloud.com/server/releases/nextcloud-28.0.10.tar.bz2
tar -xjf nextcloud-28.0.10.tar.bz2
sudo mv nextcloud /var/www/html/

# Set permissions
sudo chown -R www-data:www-data /var/www/html/nextcloud
sudo chmod -R 755 /var/www/html/nextcloud

# Configure Apache
sudo a2enmod ssl

sudo bash -c 'cat > /etc/apache2/sites-available/nextcloud.conf <<EOF
<VirtualHost *:80>
    DocumentRoot /var/www/html/nextcloud/
    ServerName modemcable015.156-81-70.mc.videotron.ca

    <Directory /var/www/html/nextcloud/>
        Options +FollowSymlinks
        AllowOverride All

        <IfModule mod_dav.c>
            Dav off
        </IfModule>

        SetEnv HOME /var/www/html/nextcloud
        SetEnv HTTP_HOME /var/www/html/nextcloud
    </Directory>

    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
EOF'

# Enable site and rewrite module
sudo a2ensite nextcloud.conf
sudo a2enmod rewrite
sudo systemctl restart apache2

echo "Nextcloud installation script completed. Please navigate to http://your_domain_or_IP/nextcloud to finish the setup."


# Define your domain

# Generate a self-signed SSL certificate
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nextcloud.key -out /etc/ssl/certs/nextcloud.crt -subj "/CN=modemcable015.156-81-70.mc.videotron.ca"

# Update the SSL configuration file to use the self-signed certificate
sudo bash -c "cat > /etc/apache2/sites-enabled/nextcloud-le-ssl.conf <<EOF
<VirtualHost *:443>
    ServerName modemcable015.156-81-70.mc.videotron.ca
    DocumentRoot /var/www/html/nextcloud/

    <Directory /var/www/html/nextcloud/>
        Options +FollowSymlinks
        AllowOverride All

        <IfModule mod_dav.c>
            Dav off
        </IfModule>

        SetEnv HOME /var/www/html/nextcloud
        SetEnv HTTP_HOME /var/www/html/nextcloud
    </Directory>

    SSLEngine on
    SSLCertificateFile /etc/ssl/certs/nextcloud.crt
    SSLCertificateKeyFile /etc/ssl/private/nextcloud.key

    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
EOF"

# Restart Apache to apply the changes
sudo systemctl restart apache2

echo "Self-signed SSL certificate created and Apache configuration updated for domain $DOMAIN"


# Restart Apache to apply the changes
sudo systemctl restart apache2

echo "Apache SSL configuration updated and server restarted for domain $DOMAIN."

# Update package list and install ufw
sudo apt update
sudo apt install -y ufw

# Allow HTTP, HTTPS, and SSH traffic
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw allow 22/tcp

# Enable ufw
sudo ufw enable

# Check ufw status
sudo ufw status

echo "Ports for HTTP (80), HTTPS (443), and SSH (22) have been enabled."
